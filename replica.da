import sys
from nacl.public import PrivateKey, Box

olympus = import_da('olympus')
client  = import_da('client')

class Replica(process):
    def setup(olympus:olympus.Olympus, config:dict, public_key_map:dict, priv_key:PrivateKey, replica_id:int):
        #output("Replica setup :Config received :", config)
        print("Replica %s: public_key_map :%s"%(replica_id, public_key_map))
        self.dictionary = {}

    def run():
        #output("Replica run: started")
        send(('ReplicasUpNow', replica_id,), to=olympus)

        #keep replica on till TailRequest is received
        #await(some(received(('TailRequest',msg_var,))) )
        await(False)

    def receive(msg=('ClientRequest', operation,), from_=client):
        output("Replica Head: msg received from client :", operation)        
        #dictionary.operation
        send(('ForwardRequest', operation, client,), to=config['replica_1'])

    # def receive(msg=('OlympusRequest', operation,), from_=olympus):
    #     output("Replica Head: msg received from olympus :", operation)
    #     #output("Config in recv :", config)
    #     send(('ForwardRequest', operation,), to=olympus)


    def receive(msg=('ForwardRequest', operation, client,), from_=replica):
        output("Replica Intermediate: msg received from previous replica :", operation)
        my_index = int(replica_id.split('_')[1])
        #send to next replica
        if  my_index == len(config) - 3:
            send(('TailRequest', operation, client,), to=config['tail'])
        else:
            send(('ForwardRequest', operation, client,), to=config['replica_' + str(my_index + 1)])


    def receive(msg=('TailRequest', operation, client,), from_=replica):
        output("Replica Tail: msg received to tail replica :", operation)
        output("sending reply to client", client)
        result = 'r'
        result_shuttle = ('r', 'a')
        # send(('Result',result), to=client)
        send(('ResultShuttle', result_shuttle), to=client)
        output("sent reply to client")

def main():
    output("In replica main")
