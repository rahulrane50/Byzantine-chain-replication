slot_number = 1

class OrderStatement:
    def __init__(self, type, slot, operation):
        self.operation = operation
        self.slot = slot               


class Proof:
    statements = set()
    def __init__(self, statement, slot, operation):
        self.statements = []
        self.statements.append(statement)
        self.slot = slot
        self.operation = operation
        # self.sequence_number = sequence_number
        # self.client_id = client_id

    def add_statement(self, statement):
        self.statements.append(statement)

    def set_replica(replica_id):
        self.replica = replica_id


class ResultStatement():
    def __init__(self, type, result, hash, operation):
        self.result = result
        self.hash = hash
        self.operation = operation

class CheckpointStatement():
    def __init__(hash):
        self.hash = hash

class Shuttle:
    #slot = 0
    def __init__(self, order_proof, sender, receiver, client):
        self.order_proof = order_proof
        self.sender = sender
        self.receiver = receiver
        self.client = client
        self.result_proof = ''
        # Shuttle.slot += 1
        # self.slot_number = slot_number
        self.checkpoint_proof = ''

    def add_result_proof(self, result_proof):
        self.result_proof = result_proof

    def add_checkpoint_proof(self, checkpoint_proof):
    self.checkpoint_proof = checkpoint_proof

    def update_sender(self, sender):
        self.sender = sender
